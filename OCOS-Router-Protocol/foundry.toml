#############################
# OCOS Router Protocol (ORP)
# Foundry configuration
#############################

[profile.default]
src                       = "contracts"
out                       = "out"
libs                      = ["lib"]
test                      = "test"
script                    = "script"

solc_version              = "0.8.24"
evm_version               = "cancun"
optimizer                 = true
optimizer_runs            = 200
via_ir                    = false
bytecode_hash             = "none"
cbor_metadata             = false
auto_detect_solc          = true

deny_warnings             = false
fs_permissions            = [{ access = "read", path = "./" }]
ffi                       = true
gas_reports               = ["RouterCore", "CCIPAdapter"]

# remappings = [
#   "@openzeppelin/=lib/openzeppelin-contracts/",
#   "solmate/=lib/solmate/src/"
# ]

[fuzz]
runs                      = 256
max_test_rejects          = 65536
seed                      = 0

[invariant]
runs                      = 64
depth                     = 64
fail_on_revert            = false
call_override             = false

[fmt]
line_length               = 100
tab_width                 = 4
bracket_spacing           = true
int_types                 = "short"
quote_style               = "double"
number_underscore         = "thousands"

[doc]
out                       = "docs"
title                     = "OCOS Router Protocol"

[profile.ci]
inherits                  = "default"
deny_warnings             = true
optimizer_runs            = 200
via_ir                    = false
bytecode_hash             = "ipfs"
cbor_metadata             = true

[profile.production]
inherits                  = "default"
optimizer_runs            = 999999
via_ir                    = true
deny_warnings             = true
bytecode_hash             = "none"
cbor_metadata             = false

[profile.dev]
inherits                  = "default"
optimizer_runs            = 200
via_ir                    = false
ffi                       = true
deny_warnings             = false

[rpc_endpoints]
mainnet                   = "${MAINNET_RPC}"
bsc                       = "${BSC_RPC}"
polygon                   = "${POLYGON_RPC}"
arbitrum                  = "${ARBITRUM_RPC}"
optimism                  = "${OPTIMISM_RPC}"
base                      = "${BASE_RPC}"
avalanche                 = "${AVALANCHE_RPC}"
scroll                    = "${SCROLL_RPC}"
zksync                    = "${ZKSYNC_RPC}"

sepolia                   = "${SEPOLIA_RPC}"
holesky                   = "${HOLESKY_RPC}"
"bsc-testnet"             = "${BSC_TESTNET_RPC}"
"arbitrum-sepolia"        = "${ARB_SEPOLIA_RPC}"
"base-sepolia"            = "${BASE_SEPOLIA_RPC}"
"optimism-sepolia"        = "${OP_SEPOLIA_RPC}"
"avalanche-fuji"          = "${FUJI_RPC}"
"polygon-amoy"            = "${AMOY_RPC}"

[etherscan]
mainnet                   = { key = "47-S47-ETHERSCAN-KEY" }
sepolia                   = { key = "47-S47-ETHERSCAN-KEY" }
holesky                   = { key = "47-S47-ETHERSCAN-KEY" }

bsc                       = { key = "47-S47-BSCSCAN-KEY", url = "https://api.bscscan.com/api" }
"bsc-testnet"             = { key = "47-S47-BSCSCAN-KEY", url = "https://api-testnet.bscscan.com/api" }

polygon                   = { key = "47-S47-POLYGONSCAN-KEY" }
amoy                      = { key = "47-S47-POLYGONSCAN-KEY", chain = "amoy" }

arbitrum                  = { key = "47-S47-ARBISCAN-KEY" }
"arbitrum-sepolia"        = { key = "47-S47-ARBISCAN-KEY", chain = "arbitrum-sepolia" }

optimism                  = { key = "47-S47-OPTIMISM-KEY" }
"optimism-sepolia"        = { key = "47-S47-OPTIMISM-KEY", chain = "optimism-sepolia" }

base                      = { key = "47-S47-BASESCAN-KEY" }
"base-sepolia"            = { key = "47-S47-BASESCAN-KEY", chain = "base-sepolia" }

avalanche                 = { key = "47-S47-SNOWTRACE-KEY" }
"avalanche-fuji"          = { key = "47-S47-SNOWTRACE-KEY", chain = "avalanche-fuji" }

scroll                    = { key = "47-S47-SCROLLSCAN-KEY" }

zksync                    = { key = "47-S47-ZKSYNC-KEY", url = "https://api-era.zksync.network/api" }

[env]
PK                        = "0x47-S47-PRIVATE-KEY"
MAINNET_RPC               = "https://eth-mainnet.g.alchemy.com/v2/47-S47-ALCHEMY"
BSC_RPC                   = "https://bsc-dataseed1.binance.org"
POLYGON_RPC               = "https://polygon-rpc.com"
ARBITRUM_RPC              = "https://arb1.arbitrum.io/rpc"
OPTIMISM_RPC              = "https://mainnet.optimism.io"
BASE_RPC                  = "https://mainnet.base.org"
AVALANCHE_RPC             = "https://api.avax.network/ext/bc/C/rpc"
SCROLL_RPC                = "https://rpc.scroll.io"
ZKSYNC_RPC                = "https://mainnet.era.zksync.io"

SEPOLIA_RPC               = "https://sepolia.infura.io/v3/47-S47-INFURA"
HOLESKY_RPC               = "https://holesky.infura.io/v3/47-S47-INFURA"
BSC_TESTNET_RPC           = "https://data-seed-prebsc-1-s1.binance.org:8545"
ARB_SEPOLIA_RPC           = "https://sepolia-rollup.arbitrum.io/rpc"
BASE_SEPOLIA_RPC          = "https://sepolia.base.org"
OP_SEPOLIA_RPC            = "https://sepolia.optimism.io"
FUJI_RPC                  = "https://api.avax-test.network/ext/bc/C/rpc"
AMOY_RPC                  = "https://rpc-amoy.polygon.technology"
